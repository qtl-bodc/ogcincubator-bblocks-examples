{
  "@context": [
    {
      "@base": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples"
    },
    {
      "bblocks": "https://www.opengis.net/def/bblocks/",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "skos": "http://www.w3.org/2004/02/skos/core#",
      "dct": "http://purl.org/dc/terms/",
      "xsd": "http://www.w3.org/2001/XMLSchema#",
      "prof": "http://www.w3.org/ns/dx/prof/",
      "dcat": "http://www.w3.org/ns/dcat#",
      "modspec": "http://www.opengis.net/def/ont/modspec/",
      "itemIdentifier": "@id",
      "baseURL": "@id",
      "name": "rdfs:label",
      "abstract": {
        "@id": "dct:abstract",
        "@type": "https://www.w3.org/ns/iana/media-types/text/markdown"
      },
      "description": {
        "@id": "dct:description",
        "@type": "https://www.w3.org/ns/iana/media-types/text/markdown"
      },
      "status": {
        "@id": "bblocks:status",
        "@type": "@id",
        "@context": {
          "@base": "http://www.opengis.net/def/status/"
        }
      },
      "dateTimeAddition": {
        "@id": "dct:created",
        "@type": "xsd:dateTime"
      },
      "version": "dct:hasVersion",
      "dateOfLastChange": {
        "@id": "dct:modified",
        "@type": "xsd:date"
      },
      "scope": {
        "@id": "bblocks:scope",
        "@type": "@id",
        "@context": {
          "@base": "http://www.opengis.net/def/bblocks/scope/"
        }
      },
      "sources": {
        "@id": "dct:source",
        "@context": {
          "title": "rdfs:label",
          "link": "@id"
        }
      },
      "schema": {
        "@id": "bblocks:hasSchema",
        "@type": "@id",
        "@container": "@index",
        "@index": "dct:format"
      },
      "ldContext": {
        "@id": "bblocks:hasJsonLdContext",
        "@type": "@id"
      },
      "sourceLdContext": {
        "@id": "bblocks:hasSourceJsonLdContext",
        "@type": "@id"
      },
      "documentation": {
        "@id": "dct:description",
        "@type": "@id",
        "@container": "@index",
        "@index": "dct:identifier",
        "@context": {
          "mediatype": "dct:format",
          "url": "rdfs:isDefinedBy"
        }
      },
      "hasConcepts": {
        "@reverse": "skos:inScheme"
      },
      "dependsOn": {
        "@id": "bblocks:dependsOn",
        "@type": "@id"
      },
      "profileOf": {
        "@id": "prof:isProfileOf",
        "@type": "@id"
      },
      "tags": "dcat:keyword",
      "shaclRules": {
        "@id": "bblocks:hasShaclRule",
        "@type": "@id",
        "@container": "@index",
        "@index": "rdfs:seeAlso"
      },
      "validationReport": {
        "@id": "bblocks:hasValidationReport",
        "@type": "@id"
      },
      "imports": {
        "@id": "bblocks:imports",
        "@type": "@id"
      },
      "conformanceClasses": {
        "@id": "modspec:class",
        "@type": "@id"
      }
    }
  ],
  "name": "Building Blocks - Building Blocks Examples",
  "abstract": "This register provides a collection of **examples** designed to illustrate capabilities and implementation patterns for [Building Blocks (see more)](https://ogcincubator.github.io/bblocks-docs). \n\n*These buildings blocks may be copied and edited into a new repository based on the [template](https://github.com/opengeospatial/bblock-template) - but should not be referenced and extended for reuse*\n",
  "description": "The aim of the highlighted examples is to illustrate implementation patterns for reusing OGC building blocks. The emphasis is on typical requirements to extend or constrain generic or abstract models such as OGC API Features, Observations etc. \n\n Other examples will illustrate different possible ways to use the Building Block machinery to semantically annotate externally defines schemas, develop and test logical constraints, or simply test examples using a published specification.\n\nMore complex examples will include transformation testing - testing a format can be transformed into a related structure and/or data model.\n",
  "modified": "2025-05-28T12:41:26.231421",
  "tooling": {
    "bblocks-postprocess": {
      "commitId": "\"68270eb1826f3347fc9e19ae5448183bf75cb9d4",
      "shortCommitId": "\"68270e",
      "date": "2025-05-27T07:46:02+00:00\""
    }
  },
  "gitRepository": "https://github.com/qtl-bodc/ogcincubator-bblocks-examples",
  "gitHubRepository": "https://github.com/qtl-bodc/ogcincubator-bblocks-examples/blob/master/",
  "baseURL": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/",
  "viewerURL": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/",
  "validationReport": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/tests/report.html",
  "imports": [
    "https://opengeospatial.github.io/bblocks/register.json",
    "https://opengeospatial.github.io/ogcapi-sosa/build/register.json"
  ],
  "@type": [
    "skos:ConceptScheme",
    "dcat:Catalog"
  ],
  "skos:prefLabel": "Building Blocks - Building Blocks Examples",
  "hasConcepts": [
    {
      "itemIdentifier": "ogc.bbr.examples.semantic-uplift.pre-and-post-uplift",
      "name": "Pre and Post Semantic Uplift example",
      "abstract": "A sample building block to show how semantic uplift can be customized",
      "status": "under-development",
      "dateTimeAddition": "2024-10-03T11:31:00+02:00",
      "itemClass": "schema",
      "version": "0.1",
      "dateOfLastChange": "2025-05-19",
      "shaclRules": {
        "ogc.bbr.examples.semantic-uplift.pre-and-post-uplift": [
          "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/semantic-uplift/pre-and-post-uplift/rules.shacl"
        ]
      },
      "ldContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/semantic-uplift/pre-and-post-uplift/context.jsonld",
      "schema": {
        "application/yaml": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/semantic-uplift/pre-and-post-uplift/schema.yaml",
        "application/json": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/semantic-uplift/pre-and-post-uplift/schema.json"
      },
      "sourceSchema": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/semantic-uplift/pre-and-post-uplift/schema.yaml",
      "sourceLdContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/semantic-uplift/pre-and-post-uplift/context.jsonld",
      "sourceFiles": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/semantic-uplift/pre-and-post-uplift/",
      "rdfData": [],
      "validationPassed": true,
      "testOutputs": "https://github.com/qtl-bodc/ogcincubator-bblocks-examples/blob/master/build/tests/bbr/examples/semantic-uplift/pre-and-post-uplift/",
      "documentation": {
        "markdown": {
          "mediatype": "text/markdown",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/markdown/bbr/examples/semantic-uplift/pre-and-post-uplift/index.md"
        },
        "json-full": {
          "mediatype": "application/json",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/json-full/bbr/examples/semantic-uplift/pre-and-post-uplift/index.json"
        },
        "bblocks-viewer": {
          "mediatype": "text/html",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/bblock/ogc.bbr.examples.semantic-uplift.pre-and-post-uplift"
        }
      },
      "@type": [
        "bblocks:Schema",
        "skos:Concept",
        "dcat:Dataset"
      ]
    },
    {
      "itemIdentifier": "ogc.bbr.examples.transforms.transforms-example",
      "name": "Transforms example",
      "abstract": "A sample building block to showcase transforms",
      "status": "under-development",
      "dateTimeAddition": "2024-10-03T11:31:00+02:00",
      "itemClass": "schema",
      "version": "0.1",
      "dateOfLastChange": "2025-05-19",
      "shaclRules": {},
      "ldContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/transforms/transforms-example/context.jsonld",
      "schema": {
        "application/yaml": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/transforms/transforms-example/schema.yaml",
        "application/json": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/transforms/transforms-example/schema.json"
      },
      "sourceSchema": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/transforms/transforms-example/schema.yaml",
      "sourceLdContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/transforms/transforms-example/context.jsonld",
      "sourceFiles": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/transforms/transforms-example/",
      "rdfData": [],
      "validationPassed": true,
      "testOutputs": "https://github.com/qtl-bodc/ogcincubator-bblocks-examples/blob/master/build/tests/bbr/examples/transforms/transforms-example/",
      "transforms": [
        {
          "id": "prefix-keys",
          "description": "Adds a \"PREF\" prefix to all object keys.",
          "type": "jq",
          "ref": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/transforms/transforms-example/transforms/prefix-keys.jq",
          "code": "walk(if type == \"object\" then with_entries( .key |= \"PREF\\(.)\" ) else . end)",
          "inputs": {
            "mediaTypes": [
              {
                "id": "json",
                "defaultExtension": "json",
                "label": "JSON",
                "mimeType": "application/json",
                "extensions": [
                  "json"
                ]
              }
            ]
          },
          "outputs": {
            "mediaTypes": [
              {
                "id": "json",
                "defaultExtension": "json",
                "label": "JSON",
                "mimeType": "application/json",
                "extensions": [
                  "json"
                ]
              }
            ]
          }
        },
        {
          "id": "prefix-predicates",
          "description": "Changes the \"http://example.com/\" prefix of every predicate to a URN",
          "type": "sparql-update",
          "ref": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/transforms/transforms-example/transforms/prefix-predicates.sparql",
          "code": "DELETE {\n  ?s ?p ?o\n}\nINSERT {\n  ?s ?p2 ?o\n}\nWHERE {\n  ?s ?p ?o\n  FILTER(STRSTARTS(STR(?p), \"http://example.com/\"))\n  BIND(URI(REPLACE(STR(?p), \"^http://example.com/\", \"urn:example:ex#\")) as ?p2)\n}",
          "inputs": {
            "mediaTypes": [
              {
                "id": "ttl",
                "defaultExtension": "ttl",
                "label": "RDF/Turtle",
                "mimeType": "text/turtle",
                "aliases": [
                  "turtle",
                  "rdf/turtle"
                ],
                "extensions": [
                  "ttl"
                ]
              },
              {
                "id": "rdf",
                "defaultExtension": "rdf",
                "label": "RDF/XML",
                "mimeType": "application/rdf+xml",
                "aliases": [
                  "rdf/xml"
                ],
                "extensions": [
                  "rdf"
                ]
              }
            ]
          },
          "outputs": {
            "mediaTypes": [
              {
                "id": "ttl",
                "defaultExtension": "ttl",
                "label": "RDF/Turtle",
                "mimeType": "text/turtle",
                "aliases": [
                  "turtle",
                  "rdf/turtle"
                ],
                "extensions": [
                  "ttl"
                ]
              },
              {
                "id": "rdf",
                "defaultExtension": "rdf",
                "label": "RDF/XML",
                "mimeType": "application/rdf+xml",
                "aliases": [
                  "rdf/xml"
                ],
                "extensions": [
                  "rdf"
                ]
              }
            ]
          }
        },
        {
          "id": "inline-transform",
          "description": "A transform's code can also be defined inside the transform's object",
          "type": "jq",
          "code": ".test = \"test\"\n",
          "inputs": {
            "mediaTypes": [
              {
                "id": "json",
                "defaultExtension": "json",
                "label": "JSON",
                "mimeType": "application/json",
                "extensions": [
                  "json"
                ]
              }
            ]
          },
          "outputs": {
            "mediaTypes": [
              {
                "id": "json",
                "defaultExtension": "json",
                "label": "JSON",
                "mimeType": "application/json",
                "extensions": [
                  "json"
                ]
              }
            ]
          }
        },
        {
          "id": "sample-xslt",
          "description": "This transform applies some changes to input XML to demonstrate XSLT transforms",
          "type": "xslt",
          "ref": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/transforms/transforms-example/transforms/sample.xslt",
          "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\n    <xsl:output method=\"xml\" indent=\"yes\" encoding=\"UTF-8\"/>\n\n    <!-- Match the root node -->\n    <xsl:template match=\"/\">\n        <xsl:apply-templates select=\"Article\"/>\n    </xsl:template>\n\n    <!-- Transform <Article> -->\n    <xsl:template match=\"Article\">\n        <Document type=\"article\">\n            <xsl:apply-templates select=\"*\"/>\n        </Document>\n    </xsl:template>\n\n    <!-- Transform <Title> to <Heading> -->\n    <xsl:template match=\"Title\">\n        <Heading>\n            <xsl:apply-templates/>\n        </Heading>\n    </xsl:template>\n\n    <!-- Wrap <Authors> content in <Contributors> -->\n    <xsl:template match=\"Authors\">\n        <Contributors>\n            <xsl:apply-templates select=\"Author\"/>\n        </Contributors>\n    </xsl:template>\n\n    <!-- Leave <Author> as is -->\n    <xsl:template match=\"Author\">\n        <xsl:copy>\n            <xsl:apply-templates/>\n        </xsl:copy>\n    </xsl:template>\n\n    <!-- Append \" [Modified]\" to the <Body> -->\n    <xsl:template match=\"Body\">\n        <xsl:copy>\n            <xsl:value-of select=\"concat(., ' [Modified]')\"/>\n        </xsl:copy>\n    </xsl:template>\n\n</xsl:stylesheet>\n",
          "inputs": {
            "mediaTypes": [
              {
                "id": "xml",
                "defaultExtension": "xml",
                "label": "XML",
                "mimeType": "application/xml",
                "aliases": [
                  "application/xml",
                  "text/xml"
                ],
                "extensions": [
                  "xml"
                ]
              }
            ]
          },
          "outputs": {
            "mediaTypes": [
              {
                "id": "xml",
                "defaultExtension": "xml",
                "label": "XML",
                "mimeType": "application/xml",
                "aliases": [
                  "application/xml",
                  "text/xml"
                ],
                "extensions": [
                  "xml"
                ]
              }
            ]
          }
        }
      ],
      "documentation": {
        "markdown": {
          "mediatype": "text/markdown",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/markdown/bbr/examples/transforms/transforms-example/index.md"
        },
        "json-full": {
          "mediatype": "application/json",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/json-full/bbr/examples/transforms/transforms-example/index.json"
        },
        "bblocks-viewer": {
          "mediatype": "text/html",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/bblock/ogc.bbr.examples.transforms.transforms-example"
        }
      },
      "@type": [
        "bblocks:Schema",
        "skos:Concept",
        "dcat:Dataset"
      ]
    },
    {
      "itemIdentifier": "ogc.bbr.examples.feature.externalSchema",
      "name": "External Schema (Smart Data Models)",
      "abstract": "This example shows a simple customisation for OGC API Feature using an externally defined domain schema.",
      "status": "under-development",
      "dateTimeAddition": "2023-05-19T00:00:00Z",
      "itemClass": "schema",
      "register": "ogc-building-block-examples",
      "version": "1.0",
      "dateOfLastChange": "2025-05-19",
      "sources": [
        {
          "title": "OGC API - Features, Part 1, 7.16.2: Feature Response",
          "link": "https://docs.ogc.org/is/17-069r3/17-069r3.html#_response_7"
        },
        {
          "title": "Smart Data models",
          "link": "https://smartdatamodels.org/"
        },
        {
          "title": "Smart Data Model: Airport Facility",
          "link": "https://github.com/smart-data-models/dataModel.ACRIS/tree/master/AirportFacility"
        }
      ],
      "maturity": "development",
      "scope": "unstable",
      "ldContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/externalSchema/context.jsonld",
      "dependsOn": [
        "ogc.geo.features.feature"
      ],
      "tags": [
        "feature",
        "examples"
      ],
      "group": "Examples",
      "shaclRules": {},
      "schema": {
        "application/yaml": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/externalSchema/schema.yaml",
        "application/json": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/externalSchema/schema.json"
      },
      "sourceSchema": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/externalSchema/schema.yaml",
      "sourceLdContext": "https://raw.githubusercontent.com/smart-data-models/dataModel.ACRIS/master/context.jsonld",
      "sourceFiles": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/externalSchema/",
      "rdfData": [],
      "validationPassed": true,
      "testOutputs": "https://github.com/qtl-bodc/ogcincubator-bblocks-examples/blob/master/build/tests/bbr/examples/feature/externalSchema/",
      "documentation": {
        "markdown": {
          "mediatype": "text/markdown",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/markdown/bbr/examples/feature/externalSchema/index.md"
        },
        "json-full": {
          "mediatype": "application/json",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/json-full/bbr/examples/feature/externalSchema/index.json"
        },
        "bblocks-viewer": {
          "mediatype": "text/html",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/bblock/ogc.bbr.examples.feature.externalSchema"
        }
      },
      "@type": [
        "bblocks:Schema",
        "skos:Concept",
        "dcat:Dataset"
      ]
    },
    {
      "itemIdentifier": "ogc.bbr.examples.feature.propertySet",
      "name": "Example property set for Features",
      "abstract": "This shows how to define a propertyset for a feature - which can be re-used in different containers - such as a GeoJSON Feature schema",
      "status": "under-development",
      "dateTimeAddition": "2023-05-19T00:00:00Z",
      "itemClass": "schema",
      "register": "ogc-building-block-examples",
      "version": "1.0",
      "dateOfLastChange": "2025-05-19",
      "sources": [
        {
          "title": "Semantic Sensor Network Ontology",
          "link": "https://www.w3.org/TR/vocab-ssn/"
        }
      ],
      "maturity": "development",
      "scope": "unstable",
      "dependsOn": [
        "ogc.sosa.properties.observation"
      ],
      "tags": [
        "properties",
        "features",
        "examples"
      ],
      "group": "Examples",
      "shaclRules": {
        "ogc.sosa.properties.observation": [
          "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/rules.shacl"
        ]
      },
      "ldContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/propertySet/context.jsonld",
      "schema": {
        "application/yaml": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/propertySet/schema.yaml",
        "application/json": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/propertySet/schema.json"
      },
      "sourceSchema": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/propertySet/schema.yaml",
      "sourceLdContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/propertySet/context.jsonld",
      "sourceFiles": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/propertySet/",
      "rdfData": [],
      "validationPassed": true,
      "testOutputs": "https://github.com/qtl-bodc/ogcincubator-bblocks-examples/blob/master/build/tests/bbr/examples/feature/propertySet/",
      "documentation": {
        "markdown": {
          "mediatype": "text/markdown",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/markdown/bbr/examples/feature/propertySet/index.md"
        },
        "json-full": {
          "mediatype": "application/json",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/json-full/bbr/examples/feature/propertySet/index.json"
        },
        "bblocks-viewer": {
          "mediatype": "text/html",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/bblock/ogc.bbr.examples.feature.propertySet"
        }
      },
      "@type": [
        "bblocks:Schema",
        "skos:Concept",
        "dcat:Dataset"
      ]
    },
    {
      "itemIdentifier": "ogc.bbr.examples.observation.vectorObservation",
      "name": "Observation Result (Vector based on GeoPose)",
      "abstract": "This building block defines the *property set* for an example specialisation of a SOSA Observation using the GeoPose standard as a result. These two patterns are defined by other Building Blocks.",
      "status": "under-development",
      "dateTimeAddition": "2023-05-19T00:00:00Z",
      "itemClass": "schema",
      "register": "ogc-building-block-examples",
      "version": "1.0",
      "dateOfLastChange": "2025-05-19",
      "sources": [],
      "maturity": "development",
      "scope": "unstable",
      "dependsOn": [
        "ogc.geo.geopose.basic.ypr",
        "ogc.sosa.properties.observation"
      ],
      "tags": [
        "examples",
        "sosa",
        "observations",
        "o&m",
        "o&m&s",
        "geopose"
      ],
      "group": "Examples",
      "shaclRules": {
        "ogc.sosa.properties.observation": [
          "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/rules.shacl"
        ]
      },
      "schema": {
        "application/yaml": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/observation/vectorObservation/schema.yaml",
        "application/json": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/observation/vectorObservation/schema.json"
      },
      "sourceSchema": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/observation/vectorObservation/schema.yaml",
      "ldContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/observation/vectorObservation/context.jsonld",
      "sourceFiles": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/observation/vectorObservation/",
      "rdfData": [],
      "validationPassed": true,
      "testOutputs": "https://github.com/qtl-bodc/ogcincubator-bblocks-examples/blob/master/build/tests/bbr/examples/observation/vectorObservation/",
      "documentation": {
        "markdown": {
          "mediatype": "text/markdown",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/markdown/bbr/examples/observation/vectorObservation/index.md"
        },
        "json-full": {
          "mediatype": "application/json",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/json-full/bbr/examples/observation/vectorObservation/index.json"
        },
        "bblocks-viewer": {
          "mediatype": "text/html",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/bblock/ogc.bbr.examples.observation.vectorObservation"
        }
      },
      "@type": [
        "bblocks:Schema",
        "skos:Concept",
        "dcat:Dataset"
      ]
    },
    {
      "itemIdentifier": "ogc.bbr.examples.feature.geojsonFeature",
      "name": "Custom Feature",
      "abstract": "This example shows a simple customisation method for OGC API Feature schemas",
      "status": "under-development",
      "dateTimeAddition": "2023-05-19T00:00:00Z",
      "itemClass": "schema",
      "register": "ogc-building-block-examples",
      "version": "1.0",
      "dateOfLastChange": "2025-05-19",
      "sources": [
        {
          "title": "OGC API - Features, Part 1, 7.16.2: Feature Response",
          "link": "https://docs.ogc.org/is/17-069r3/17-069r3.html#_response_7"
        }
      ],
      "maturity": "development",
      "scope": "unstable",
      "dependsOn": [
        "ogc.bbr.examples.propertySet",
        "ogc.geo.features.feature",
        "ogc.bbr.examples.feature.propertySet"
      ],
      "tags": [
        "feature",
        "examples"
      ],
      "group": "Examples",
      "highlighted": true,
      "shaclRules": {
        "ogc.sosa.properties.observation": [
          "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/rules.shacl"
        ]
      },
      "schema": {
        "application/yaml": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/geojsonFeature/schema.yaml",
        "application/json": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/geojsonFeature/schema.json"
      },
      "sourceSchema": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/geojsonFeature/schema.yaml",
      "ldContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/geojsonFeature/context.jsonld",
      "sourceFiles": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/geojsonFeature/",
      "rdfData": [],
      "validationPassed": true,
      "testOutputs": "https://github.com/qtl-bodc/ogcincubator-bblocks-examples/blob/master/build/tests/bbr/examples/feature/geojsonFeature/",
      "documentation": {
        "markdown": {
          "mediatype": "text/markdown",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/markdown/bbr/examples/feature/geojsonFeature/index.md"
        },
        "json-full": {
          "mediatype": "application/json",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/json-full/bbr/examples/feature/geojsonFeature/index.json"
        },
        "bblocks-viewer": {
          "mediatype": "text/html",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/bblock/ogc.bbr.examples.feature.geojsonFeature"
        }
      },
      "@type": [
        "bblocks:Schema",
        "skos:Concept",
        "dcat:Dataset"
      ]
    },
    {
      "itemIdentifier": "ogc.bbr.examples.feature.geojsonFeatureFGLenient",
      "name": "Custom JSON-FG (lenient) Feature",
      "abstract": "This example shows a simple customisation method for a JSON-FG (lenient) feature",
      "status": "under-development",
      "dateTimeAddition": "2024-07-25T00:00:00Z",
      "itemClass": "schema",
      "register": "ogc-building-block-examples",
      "version": "1.0",
      "dateOfLastChange": "2025-05-19",
      "maturity": "development",
      "scope": "unstable",
      "tags": [
        "feature",
        "examples"
      ],
      "group": "Examples",
      "shaclRules": {
        "ogc.sosa.properties.observation": [
          "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/rules.shacl"
        ]
      },
      "dependsOn": [
        "ogc.geo.json-fg.feature-lenient",
        "ogc.bbr.examples.feature.propertySet"
      ],
      "schema": {
        "application/yaml": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/geojsonFeatureFGLenient/schema.yaml",
        "application/json": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/geojsonFeatureFGLenient/schema.json"
      },
      "sourceSchema": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/geojsonFeatureFGLenient/schema.yaml",
      "ldContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/geojsonFeatureFGLenient/context.jsonld",
      "sourceFiles": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/geojsonFeatureFGLenient/",
      "rdfData": [],
      "validationPassed": true,
      "testOutputs": "https://github.com/qtl-bodc/ogcincubator-bblocks-examples/blob/master/build/tests/bbr/examples/feature/geojsonFeatureFGLenient/",
      "documentation": {
        "markdown": {
          "mediatype": "text/markdown",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/markdown/bbr/examples/feature/geojsonFeatureFGLenient/index.md"
        },
        "json-full": {
          "mediatype": "application/json",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/json-full/bbr/examples/feature/geojsonFeatureFGLenient/index.json"
        },
        "bblocks-viewer": {
          "mediatype": "text/html",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/bblock/ogc.bbr.examples.feature.geojsonFeatureFGLenient"
        }
      },
      "@type": [
        "bblocks:Schema",
        "skos:Concept",
        "dcat:Dataset"
      ]
    },
    {
      "itemIdentifier": "ogc.bbr.examples.feature.geosparqlFeature",
      "name": "GeoJSON transformed to GeoSPARQL geometry",
      "highlighted": true,
      "abstract": "This example includes an uplift step to use a GeoSPARQL geometry in a GeoJSON object",
      "status": "under-development",
      "dateTimeAddition": "2024-07-30T00:00:00Z",
      "itemClass": "schema",
      "register": "ogc-building-block-examples",
      "version": "1.0",
      "dateOfLastChange": "2025-05-19",
      "maturity": "development",
      "scope": "unstable",
      "tags": [
        "feature",
        "examples"
      ],
      "group": "Examples",
      "shaclRules": {
        "ogc.sosa.properties.observation": [
          "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/rules.shacl"
        ]
      },
      "dependsOn": [
        "ogc.geo.features.feature",
        "ogc.bbr.examples.feature.propertySet"
      ],
      "ldContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/geosparqlFeature/context.jsonld",
      "schema": {
        "application/yaml": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/geosparqlFeature/schema.yaml",
        "application/json": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/feature/geosparqlFeature/schema.json"
      },
      "sourceSchema": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/geosparqlFeature/schema.yaml",
      "sourceLdContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/geosparqlFeature/context.jsonld",
      "sourceFiles": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/feature/geosparqlFeature/",
      "rdfData": [],
      "validationPassed": true,
      "testOutputs": "https://github.com/qtl-bodc/ogcincubator-bblocks-examples/blob/master/build/tests/bbr/examples/feature/geosparqlFeature/",
      "documentation": {
        "markdown": {
          "mediatype": "text/markdown",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/markdown/bbr/examples/feature/geosparqlFeature/index.md"
        },
        "json-full": {
          "mediatype": "application/json",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/json-full/bbr/examples/feature/geosparqlFeature/index.json"
        },
        "bblocks-viewer": {
          "mediatype": "text/html",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/bblock/ogc.bbr.examples.feature.geosparqlFeature"
        }
      },
      "@type": [
        "bblocks:Schema",
        "skos:Concept",
        "dcat:Dataset"
      ]
    },
    {
      "itemIdentifier": "ogc.bbr.examples.observation.vectorObservationFeature",
      "name": "Custom Result for Observation Feature",
      "abstract": "This building block defines an example specialisation of an existing Feature specialisation (SOSA Observation), using another schema to define a result set - in this case the GeoPose model",
      "status": "under-development",
      "dateTimeAddition": "2023-05-19T00:00:00Z",
      "itemClass": "schema",
      "register": "ogc-building-block-examples",
      "version": "1.0",
      "dateOfLastChange": "2025-05-19",
      "sources": [
        {
          "title": "Semantic Sensor Network Ontology",
          "link": "https://www.w3.org/TR/vocab-ssn/"
        }
      ],
      "maturity": "development",
      "scope": "unstable",
      "dependsOn": [
        "ogc.sosa.features.observationCollection",
        "ogc.bbr.examples.observation.vectorObservation",
        "ogc.sosa.features.observation",
        "ogc.sosa.properties.observation"
      ],
      "tags": [
        "sosa",
        "observations",
        "o&m",
        "o&m&s",
        "examples"
      ],
      "group": "Examples",
      "highlighted": true,
      "shaclRules": {
        "ogc.bbr.examples.observation.vectorObservationFeature": [
          "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/observation/vectorObservationFeature/rules.shacl"
        ],
        "ogc.sosa.properties.observation": [
          "https://opengeospatial.github.io/ogcapi-sosa/_sources/properties/observation/rules.shacl"
        ]
      },
      "schema": {
        "application/yaml": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/observation/vectorObservationFeature/schema.yaml",
        "application/json": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/observation/vectorObservationFeature/schema.json"
      },
      "sourceSchema": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/observation/vectorObservationFeature/schema.yaml",
      "ldContext": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/annotated/bbr/examples/observation/vectorObservationFeature/context.jsonld",
      "sourceFiles": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/_sources/observation/vectorObservationFeature/",
      "rdfData": [],
      "validationPassed": true,
      "testOutputs": "https://github.com/qtl-bodc/ogcincubator-bblocks-examples/blob/master/build/tests/bbr/examples/observation/vectorObservationFeature/",
      "documentation": {
        "markdown": {
          "mediatype": "text/markdown",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/markdown/bbr/examples/observation/vectorObservationFeature/index.md"
        },
        "json-full": {
          "mediatype": "application/json",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/build/generateddocs/json-full/bbr/examples/observation/vectorObservationFeature/index.json"
        },
        "bblocks-viewer": {
          "mediatype": "text/html",
          "url": "https://qtl-bodc.github.io/ogcincubator-bblocks-examples/bblock/ogc.bbr.examples.observation.vectorObservationFeature"
        }
      },
      "@type": [
        "bblocks:Schema",
        "skos:Concept",
        "dcat:Dataset"
      ]
    }
  ]
}